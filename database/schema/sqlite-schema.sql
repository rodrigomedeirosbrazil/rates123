CREATE TABLE IF NOT EXISTS "migrations" ("id" integer primary key autoincrement not null, "migration" varchar not null, "batch" integer not null);
CREATE TABLE IF NOT EXISTS "users" ("id" integer primary key autoincrement not null, "name" varchar not null, "email" varchar not null, "email_verified_at" datetime, "password" varchar not null, "remember_token" varchar, "created_at" datetime, "updated_at" datetime);
CREATE UNIQUE INDEX "users_email_unique" on "users" ("email");
CREATE TABLE IF NOT EXISTS "password_reset_tokens" ("email" varchar not null, "token" varchar not null, "created_at" datetime, primary key ("email"));
CREATE TABLE IF NOT EXISTS "failed_jobs" ("id" integer primary key autoincrement not null, "uuid" varchar not null, "connection" text not null, "queue" text not null, "payload" text not null, "exception" text not null, "failed_at" datetime not null default CURRENT_TIMESTAMP);
CREATE UNIQUE INDEX "failed_jobs_uuid_unique" on "failed_jobs" ("uuid");
CREATE TABLE IF NOT EXISTS "personal_access_tokens" ("id" integer primary key autoincrement not null, "tokenable_type" varchar not null, "tokenable_id" integer not null, "name" varchar not null, "token" varchar not null, "abilities" text, "last_used_at" datetime, "expires_at" datetime, "created_at" datetime, "updated_at" datetime);
CREATE INDEX "personal_access_tokens_tokenable_type_tokenable_id_index" on "personal_access_tokens" ("tokenable_type", "tokenable_id");
CREATE UNIQUE INDEX "personal_access_tokens_token_unique" on "personal_access_tokens" ("token");
CREATE TABLE IF NOT EXISTS "rates" ("id" integer primary key autoincrement not null, "price" numeric not null, "checkin" date not null, "available" tinyint(1) not null, "extra" text, "created_at" datetime, "updated_at" datetime, "property_id" integer, foreign key("property_id") references "properties"("id"));
CREATE TABLE IF NOT EXISTS "scraped_platforms" ("id" integer primary key autoincrement not null, "name" varchar not null, "slug" varchar not null, "deleted_at" datetime);
CREATE UNIQUE INDEX "monitored_platforms_slug_unique" on "scraped_platforms" ("slug");
CREATE TABLE IF NOT EXISTS "properties" (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, name VARCHAR(255) NOT NULL COLLATE "BINARY", url VARCHAR(255) NOT NULL COLLATE "BINARY", extra CLOB DEFAULT NULL COLLATE "BINARY", created_at DATETIME DEFAULT NULL, updated_at DATETIME DEFAULT NULL, deleted_at DATETIME DEFAULT NULL, monitored_platform_id INTEGER DEFAULT NULL, "country" varchar, "state" varchar, "city" varchar, "neighborhood" varchar, "address" varchar, "number" varchar, "complement" varchar, "postal_code" varchar, "latitude" numeric, "longitude" numeric, "hits_property_name" varchar);
CREATE TABLE IF NOT EXISTS "schedule_events" ("id" integer primary key autoincrement not null, "name" varchar not null, "begin" date not null, "end" date not null, "type" varchar not null, "country" varchar, "state" varchar, "city" varchar, "created_at" datetime, "updated_at" datetime);
CREATE TABLE IF NOT EXISTS "syncs" (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, property_id INTEGER NOT NULL, prices_count INTEGER NOT NULL, started_at DATETIME NOT NULL, finished_at DATETIME DEFAULT NULL, status VARCHAR(255) DEFAULT 'successful' NOT NULL COLLATE "BINARY", exception CLOB DEFAULT NULL COLLATE "BINARY", FOREIGN KEY (property_id) REFERENCES "properties" (id) ON UPDATE NO ACTION ON DELETE NO ACTION NOT DEFERRABLE INITIALLY IMMEDIATE);
CREATE INDEX IDX_35FCEDB5805DA117 ON "syncs" (property_id);
CREATE TABLE IF NOT EXISTS "permissions" ("id" integer primary key autoincrement not null, "name" varchar not null, "guard_name" varchar not null, "created_at" datetime, "updated_at" datetime);
CREATE UNIQUE INDEX "permissions_name_guard_name_unique" on "permissions" ("name", "guard_name");
CREATE TABLE IF NOT EXISTS "roles" ("id" integer primary key autoincrement not null, "name" varchar not null, "guard_name" varchar not null, "created_at" datetime, "updated_at" datetime);
CREATE UNIQUE INDEX "roles_name_guard_name_unique" on "roles" ("name", "guard_name");
CREATE TABLE IF NOT EXISTS "model_has_permissions" ("permission_id" integer not null, "model_type" varchar not null, "model_id" integer not null, foreign key("permission_id") references "permissions"("id") on delete cascade, primary key ("permission_id", "model_id", "model_type"));
CREATE INDEX "model_has_permissions_model_id_model_type_index" on "model_has_permissions" ("model_id", "model_type");
CREATE TABLE IF NOT EXISTS "model_has_roles" ("role_id" integer not null, "model_type" varchar not null, "model_id" integer not null, foreign key("role_id") references "roles"("id") on delete cascade, primary key ("role_id", "model_id", "model_type"));
CREATE INDEX "model_has_roles_model_id_model_type_index" on "model_has_roles" ("model_id", "model_type");
CREATE TABLE IF NOT EXISTS "role_has_permissions" ("permission_id" integer not null, "role_id" integer not null, foreign key("permission_id") references "permissions"("id") on delete cascade, foreign key("role_id") references "roles"("id") on delete cascade, primary key ("permission_id", "role_id"));
CREATE TABLE IF NOT EXISTS "user_followed_properties" ("id" integer primary key autoincrement not null, "property_id" integer not null, "user_id" integer not null, foreign key("property_id") references "properties"("id"), foreign key("user_id") references "users"("id"));
CREATE TABLE price_notifications (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, property_id INTEGER NOT NULL, checkin DATE NOT NULL, type VARCHAR(255) NOT NULL COLLATE "BINARY", created_at DATETIME DEFAULT NULL, updated_at DATETIME DEFAULT NULL, "before" NUMERIC(10, 0) DEFAULT NULL, "after" NUMERIC(10, 0) DEFAULT NULL, average_price NUMERIC(10, 0) DEFAULT NULL, FOREIGN KEY (property_id) REFERENCES "properties" (id) ON UPDATE NO ACTION ON DELETE NO ACTION NOT DEFERRABLE INITIALLY IMMEDIATE);
CREATE INDEX IDX_3F20F66805DA117 ON price_notifications (property_id);
CREATE TABLE IF NOT EXISTS "occupancies" ("id" integer primary key autoincrement not null, "property_id" integer not null, "checkin" date not null, "total_rooms" integer not null, "occupied_rooms" integer not null, "created_at" datetime, "updated_at" datetime, foreign key("property_id") references "properties"("id"));
INSERT INTO migrations VALUES(1,'2014_10_12_000000_create_users_table',1);
INSERT INTO migrations VALUES(2,'2014_10_12_100000_create_password_reset_tokens_table',1);
INSERT INTO migrations VALUES(3,'2019_08_19_000000_create_failed_jobs_table',1);
INSERT INTO migrations VALUES(4,'2019_12_14_000001_create_personal_access_tokens_table',1);
INSERT INTO migrations VALUES(5,'2024_02_13_000000_create_demand_table',1);
INSERT INTO migrations VALUES(6,'2024_02_21_000000_create_monitored_properties_table',1);
INSERT INTO migrations VALUES(7,'2024_02_21_000000_create_properties_table',1);
INSERT INTO migrations VALUES(8,'2024_02_21_000000_create_units_table',1);
INSERT INTO migrations VALUES(9,'2024_02_21_000001_create_monitored_datas_table',1);
INSERT INTO migrations VALUES(10,'2024_02_21_000001_create_monitored_syncs_table',1);
INSERT INTO migrations VALUES(11,'2024_03_08_000001_create_monitored_platforms_table',2);
INSERT INTO migrations VALUES(12,'2024_03_08_000002_update_monitored_property_table',3);
INSERT INTO migrations VALUES(13,'2024_03_08_000003_update_monitored_property_table',3);
INSERT INTO migrations VALUES(14,'2024_03_09_000001_create_price_notifications_table',4);
INSERT INTO migrations VALUES(15,'2024_03_18_000001_create_date_events_table',5);
INSERT INTO migrations VALUES(16,'2024_03_20_000001_update_monitored_sync_table',6);
INSERT INTO migrations VALUES(17,'2024_03_23_000001_update_monitored_properties_table',7);
INSERT INTO migrations VALUES(18,'2024_03_26_000001_update_price_notifications_table',8);
INSERT INTO migrations VALUES(20,'2024_03_27_003810_create_permission_tables',9);
INSERT INTO migrations VALUES(21,'2024_04-01_000001_create_user_property_table',10);
INSERT INTO migrations VALUES(22,'2024_04_05_000001_update_price_notifications_table',11);
INSERT INTO migrations VALUES(23,'2024_04_18_000001_create_occupancy_table',12);
INSERT INTO migrations VALUES(24,'2024_04_22_000001_update_monitored_property_table',13);
